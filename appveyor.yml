# Test against the latest version of this Node.js version
image:
- Visual Studio 2015
- Visual Studio 2017 RC

environment:
  nodejs_version: "7"
  DEBUG: "autoconf,node-gyp"
  NPM_TOKEN:
    secure: p6I7IcfVWhufrMLBwgQ2OQgMA/65tmLwryPmVr+zbRGpSUB/Kq/JPP/MSWmPNutQ
  matrix:
    - GYP_MSVS_VERSION: "2013"
    - GYP_MSVS_VERSION: "2015"
    - GYP_MSVS_VERSION: "2017"

matrix:
  allow_failures:
    - GYP_MSVS_VERSION: "2017"
      image: Visual Studio 2015
    - GYP_MSVS_VERSION: "2010"
      image: Visual Studio 2017 RC
    - GYP_MSVS_VERSION: "2012"
      image: Visual Studio 2017 RC
    - GYP_MSVS_VERSION: "2013"
      image: Visual Studio 2017 RC

init:
  - ps: IF ((test-path 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community') -and ($env:GYP_MSVS_VERSION -lt 2015)) {throw}
  - ps: IF (!(test-path 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community') -and ($env:GYP_MSVS_VERSION -eq 2017)) {throw}

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version
  # install modules
  - cmd: >-
      npm config set "//registry.npmjs.org/:_authToken=%NPM_TOKEN%" -q

      SET NPM_TOKEN=

      npm -g install mocha

      npm link

      cd C:\projects & git clone https://github.com/node4good/gyp.js.git

      cd C:\projects\gyp.js & npm link windows-autoconf & npm i

      cd C:\projects & git clone https://github.com/refack/node-gyp.git

      cd C:\projects\node-gyp & npm link windows-autoconf & npm i

# Post-install test scripts.
test_script:
- cmd: >-
    cd C:\projects\windows-autoconf

    npm test

- ps: >-
    if ($env:GYP_MSVS_VERSION -ge 2015)
    {
      cd C:\projects\node-gyp
      npm test 2> node-gyp.stderr.log
      Push-AppveyorArtifact node-gyp.stderr.log
    }

- cmd: >-
    cd C:\projects\gyp.js

    mocha

deploy_script:
- cmd: >-
    cd C:\projects\windows-autoconf

    IF %APPVEYOR_REPO_TAG%==true IF %GYP_MSVS_VERSION%==2017 npm publish


# Don't actually build.
build: off
